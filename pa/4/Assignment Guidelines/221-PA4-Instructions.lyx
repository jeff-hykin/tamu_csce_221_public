#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\series bold
\size large
CSCE 221 Cover Page
\end_layout

\begin_layout Standard
\align center

\size large
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more on Aggie Honor System Office website: 
\family typewriter

\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset


\family default

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Standard
\noindent

\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
CSCE 221
\size large
 
\size larger
Assignment 4 (100 points)
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
Due Dates: See the Calendar
\end_layout

\begin_layout Section*
\noindent

\series bold
Objectives
\end_layout

\begin_layout Standard
We will consider a directed graph without cycles called 
\series bold
a directed acyclic graph
\series default
 (DAG).
 In this assignment you are going to find a topological ordering in a DAG.
 There are many real life problems that can be modeled by such graphs and
 solved by the topological ordering algorithm.
 Read the section 9.2, pp.
 382-385 in the textbook to learn more about the algorithm.
 
\end_layout

\begin_layout Section*

\series bold
Programming (100 points)
\end_layout

\begin_layout Standard
The assignment consists of two parts:
\end_layout

\begin_layout Itemize

\series bold
Part 1
\series default
 – implementation of the graph data structure
\end_layout

\begin_layout Itemize

\series bold
Part 2
\series default
 – implementation of the topological ordering for a DAG.
 Please notice that we take a DAG as an input and, if no cycle exists, the
 topological ordering for the DAG is returned.
\end_layout

\begin_layout Subsection*

\series bold
Part 1 (40 points)
\series default
 
\end_layout

\begin_layout Standard
The purpose of this part is to read in the data from an input file with
 a given format, build a graph data structure, and display the graph in
 text format.
\end_layout

\begin_layout Standard
You should implement a graph data structure which is defined based on an
 additional type
\family typewriter
 Vertex
\family default
.
 The implementation of the 
\family typewriter
Graph
\family default
 class should be based on 
\series bold
adjacency lists
\series default
, see the file 
\family typewriter
graph.h
\family default
.
\end_layout

\begin_layout Standard
You should implement the following functions (
\family typewriter
T
\family default
 can be 
\family typewriter
int
\family default
, 
\family typewriter
char
\family default
 or 
\family typewriter
string
\family default
):
\end_layout

\begin_layout Itemize

\family typewriter
\size small
void 
\series bold
buildGraph
\series default
(istream &input) 
\begin_inset Newline newline
\end_inset

//build the graph from input
\begin_inset Newline newline
\end_inset

// according to the specification below 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\family typewriter
\size small
void 
\series bold
displayGraph
\series default
(ostream &o) 
\begin_inset Newline newline
\end_inset

//prints the graph according to the specification into ostream, 
\begin_inset Newline newline
\end_inset

// vertices can be printed in any order
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size small
Vertex<T> 
\series bold
at
\series default
(T label) 
\begin_inset Newline newline
\end_inset

//returns the Vertex with the given label, 
\begin_inset Newline newline
\end_inset

// 
\series bold
throws an exception if it is not present
\end_layout

\begin_layout Itemize

\family typewriter
\size small
int 
\series bold
size
\series default
() 
\begin_inset Newline newline
\end_inset

//returns the number of vertices in the graphs
\end_layout

\begin_layout Standard
You are encouraged to use a hash table to store the vertices in the graph.
 
\family typewriter
std::unordered_map
\family default
 is one such a data structure.
 Using this library is covered at the end of the document.
\end_layout

\begin_layout Standard
The graph is built by reading data from a text file with fixed format, see
 the example below.
 At each row, the first number is the label of the start vertex of a directed
 edge.
 Other numbers in this row are the end vertices accessed from the start
 vertex.
 
\end_layout

\begin_layout Standard

\series bold
\emph on
Example
\series default
\emph default
.
 The first row starts with the vertex 
\begin_inset Formula $1$
\end_inset

 and provides information about three directed edges to vertices 
\begin_inset Formula $2$
\end_inset

, 
\begin_inset Formula $4$
\end_inset

 and 
\begin_inset Formula $5$
\end_inset

.
 In the case when there is no edge from a certain vertex, for example for
 the vertex 5, the list is empty.
 This example is from input file called 
\family typewriter
input.data
\family default
 provided with this assignment.
 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graph-example.png

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "b"
hor_pos "c"
has_inner_box 1
inner_pos "b"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
1 2 4 5
\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 4 7
\end_layout

\begin_layout Plain Layout

\family typewriter
3 4
\end_layout

\begin_layout Plain Layout

\family typewriter
4 6 7
\end_layout

\begin_layout Plain Layout

\family typewriter
5
\end_layout

\begin_layout Plain Layout

\family typewriter
6 5
\end_layout

\begin_layout Plain Layout

\family typewriter
7 6
\end_layout

\end_inset


\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Itemize
We assume that the graph we are dealing with is sparse and unweighted.
 Then, 
\series bold
adjacency lists
\series default
 will be a natural choice to store the connection between two vertices.
 The class 
\family typewriter
Graph
\family default
 is used to store the graph and implements the necessary operations such
 as 
\family typewriter
buildGraph
\family default
.
 Furthermore, a 
\family typewriter
Vertex
\family default
 class can be implemented to store the basic information about a graph vertex
 such as a label which in our case is an integer.
 
\end_layout

\begin_layout Itemize
The vertices are not necessarily numbered consecutively, making a 
\series bold
hash table
\series default
 a logical choice data structure for storing vertices with labels as keys
\end_layout

\begin_layout Itemize
You may assume that the graph is fully specified by the input stream and
 will not be changed after building the graph.
 Note: The last row of the input file may or may not be an empty line.
 Hence, while parsing consider this case and ignore this last empty line
 if it exists.
\end_layout

\begin_layout Itemize

\family typewriter
displayGraph()
\family default
 will print out each vertex and its adjacency list.
 For example, consider the graph 
\begin_inset Formula $G$
\end_inset

 and its corresponding adjacency linked lists for an input sample graph
 (
\family typewriter
input.data
\family default
).
 Test your program by reading a graph from an input file and use the function
 
\family typewriter
displayGraph()
\family default
 to display the generated graph in text format, see the output below.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graph-example.png

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "b"
hor_pos "c"
has_inner_box 1
inner_pos "b"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $1:2\,\,\,4\,\,\,5\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $2:3\,\,\,4\,\,\,7\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $3:4\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $4:6\,\,\,7\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $5:$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $6:5$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $7:6$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gradescope should accept the display of vertices in any order (the column
 before 
\begin_inset Quotes eld
\end_inset

:
\begin_inset Quotes erd
\end_inset

) and the adjacent vertices of a vertex in any order (the list of vertices
 after 
\begin_inset Quotes eld
\end_inset

:
\begin_inset Quotes erd
\end_inset

 of a vertex).
 For example, valid outputs of 
\family typewriter
input.data
\family default
 are
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "b"
hor_pos "c"
has_inner_box 1
inner_pos "b"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $7:6$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $6:5$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $5:$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $1:2\,\,\,4\,\,\,5\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $2:3\,\,\,4\,\,\,7\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $3:4\,$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $4:6\,\,\,7\,$
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
You can compile your code using this command line:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
\series bold
make
\end_layout

\begin_layout Standard
And you can run your program by executing:
\end_layout

\begin_layout Standard

\family typewriter
\series bold
./main input.data
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*

\series bold
Part 2 (60 points)
\end_layout

\begin_layout Itemize
The formal definition of the topological sort:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Let G be a DAG with 
\begin_inset Formula $n$
\end_inset

 vertices.
 A 
\series bold
topological ordering
\series default
 of G is the ordering 
\begin_inset Formula $v_{1},v_{2},\dots,v_{n}$
\end_inset

 of the vertices of G such that for every edge 
\begin_inset Formula $(v_{i},v_{j})$
\end_inset

 of G we have 
\begin_inset Formula $i<j$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The illustration of the definition of the topological sort ordering gives
 a sequence of vertices:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graph-example.png

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "b"
hor_pos "c"
has_inner_box 1
inner_pos "b"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
1 2 3 4 7 6 5 
\end_layout

\end_inset


\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
The topological sort ordering places vertices of the graph along the horizontal
 line with the following property: if there is an edge from the vertex 
\begin_inset Formula $v_{i}$
\end_inset

 to the vertex 
\begin_inset Formula $v_{j}$
\end_inset

 then the vertex 
\begin_inset Formula $v_{i}$
\end_inset

 precedes 
\begin_inset Formula $v_{j}$
\end_inset

 in the topological ordering.
\end_layout

\end_deeper
\begin_layout Itemize
Topological sort algorithm: 
\end_layout

\begin_deeper
\begin_layout Enumerate
The input is a DAG
\end_layout

\begin_deeper
\begin_layout Enumerate
Algorithm – see the textbook, Fig.
 9.7, p.
 385 or 
\series bold
Algorithms
\series default
 section below.
 
\end_layout

\begin_deeper
\begin_layout Itemize
You can use 
\family typewriter
topNum
\family default
 (
\family typewriter
top_num
\family default
) as in Fig.
 9.7 (Image is provided in 
\series bold
Algorithms
\series default
 section as well), and then traverse the graph to initialize the topological
 sort ordering vector.
 
\family typewriter
top_num
\family default
 keeps track of the order of vertices in topological sort.
 
\end_layout

\end_deeper
\begin_layout Enumerate
The output of the program should be a vector of vertices (or their labels)
 set in topological sort order.
 
\end_layout

\begin_deeper
\begin_layout Itemize
You need to print the topological sort ordering vector by printing the labels
 of vertices.
\end_layout

\end_deeper
\begin_layout Standard
In this part you should implement the following functions:
\end_layout

\begin_layout Itemize

\family typewriter
\size small
bool topological_sort() 
\begin_inset Newline newline
\end_inset

//performs the topological sort which returns true
\begin_inset Newline newline
\end_inset

// if a topological ordering is found, 
\begin_inset Newline newline
\end_inset

// otherwise returns false.
\end_layout

\begin_layout Itemize

\family typewriter
\size small
void compute_indegree() 
\begin_inset Newline newline
\end_inset

//assigns the indegree, the number of inbound edges, 
\begin_inset Newline newline
\end_inset

// for each vertex 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\family typewriter
\size small
void print_top_sort(ostream& o, bool addNewline=true) 
\begin_inset Newline newline
\end_inset

//prints the topological ordering into the ostream.
\begin_inset Newline newline
\end_inset

//If the second parameter is true, 
\begin_inset Newline newline
\end_inset

// insert a newline at the end.
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Subsection*

\series bold
Requirements
\end_layout

\begin_layout Itemize
Submit only the file 
\family typewriter
graph.h
\family default
 to Gradescope.
\end_layout

\begin_layout Itemize

\series bold
Testing:
\series default
 test your program for correctness using the cases below:
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Case 1
\series default
: Use the example (
\family typewriter
input.data
\family default
) provided in the description of the problem.
\end_layout

\begin_layout Standard

\series bold
Case 2
\series default
: Samantha plans her course schedule.
 She is interested in the following eight courses: 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
CSCE121, CSCE222, CSCE221, CSCE312, CSCE314, CSCE313, CSCE315, and CSCE411
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
.
 The course prerequisites are:
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
course
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
#
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
prerequisites
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE121:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(none)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE222:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(none)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE221:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE121
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE222
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE312:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE221
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE314:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE221
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE313:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE221
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE315:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE312
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE314
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE411:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE222
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSCE221
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
This will find a sequence of courses that allows Samantha to satisfy all
 the prerequisites.
 Assume that she can only take one class at a time.
 The input file for this case is provided in 
\family typewriter
input2.data
\family default
.
 Note: the table above contains courses and their prerequisites.
 The 
\family typewriter
input2.data
\family default
 file contains the set of vertices and their corresponding adjacent vertices.
\end_layout

\begin_layout Standard

\series bold
Case 3
\series default
: Create a directed graph with cycles and test your program.
 There is one such a file provided (
\family typewriter
input-cycle.data
\family default
).
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Algorithms:
\end_layout

\begin_deeper
\begin_layout Itemize
Pseudocode for topological sort (topsort) from the textbook
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename topological_sort.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Pseudocode for calculating in-degree from the textbook
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename indegree.png
	scale 60

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
Using the C++ Standard Library:
\end_layout

\begin_deeper
\begin_layout Standard
There are several C++ standard library containers you can use:
\end_layout

\begin_layout Itemize

\family typewriter
std::unordered_set
\end_layout

\begin_layout Itemize

\family typewriter
std::unordered_map
\end_layout

\begin_layout Itemize

\family typewriter
std::set
\end_layout

\begin_layout Itemize

\family typewriter
std::map
\end_layout

\begin_layout Standard
The former two use a hash table, the latter two use red-black trees.
 The set elements are immutable whereas map elements are mutable.
 The other key difference is that the unordered data structures require
 the elements to have an ordering defined via 
\family typewriter
operator<
\family default
.
 This allows the in-order traversal of vertices based on this ordering.
 This would have been great for 
\family typewriter
print_top_sort()
\family default
, however, as the topological ordering is not known at insertion time, this
 cannot be used for ordering; 
\family typewriter
std::unordered_map
\family default
 is the 
\emph on
preferable
\emph default
 data structure.
 
\end_layout

\begin_layout Standard
To aid in working with this data structure, the following code is provided:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

//create the unordered_map object 
\end_layout

\begin_layout Plain Layout

//the two template types are for key and value type 
\end_layout

\begin_layout Plain Layout

unordered_map<T, Vertex<T>> node_set;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

//create and insert a new object with key token 
\end_layout

\begin_layout Plain Layout

//  if a key in the table with this item exists, 
\end_layout

\begin_layout Plain Layout

//  the new object is not inserted 
\end_layout

\begin_layout Plain Layout

//returns a pair<unordered_map<T, Vertex<T>>::iterator, bool> 
\end_layout

\begin_layout Plain Layout

//  where iterator is a reference to the object in the hash table,
\end_layout

\begin_layout Plain Layout

//  bool is true if this is the first time insert, false otherwise 
\end_layout

\begin_layout Plain Layout

auto pair = node_set.insert(make_pair(label, Vertex<T>{label, 0}));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

bool newItem = pair.second; //true if this is the first item with the given
 key 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

unordered_map<T, Vertex<T>>::iterator iter = pair.first; 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//the iterator can be dereferenced to get the object back 
\end_layout

\begin_layout Plain Layout

Vertex<T> v = *iter; //create a copy of the v object 
\end_layout

\begin_layout Plain Layout

Vertex<T>& v = *iter; //create a reference to v in the map   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//WARNING: references are only valid until the next insert is made  
\end_layout

\begin_layout Plain Layout

//  - they should never be stored in variables
\end_layout

\begin_layout Plain Layout

//  - pointers to them should never be made
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Working with STL data structures require considering 
\end_layout

\begin_layout Plain Layout

// when references and copies are used.
\end_layout

\begin_layout Plain Layout

//The trivial solution is here: 
\end_layout

\begin_layout Plain Layout

Vertex<T> v = node_set.at(label); //copy assignment for v .
 
\end_layout

\begin_layout Plain Layout

v.top_num = 0; //or other changes to v 
\end_layout

\begin_layout Plain Layout

node_set.at(label) = v;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Alternatively, using references can save some copies 
\end_layout

\begin_layout Plain Layout

//top_num is 0 by default 
\end_layout

\begin_layout Plain Layout

cout << node_set.at(label).top_num << endl;   // outputs 0
\end_layout

\begin_layout Plain Layout

Vertex<T>& vRef = node_set.at(label);       // by reference 
\end_layout

\begin_layout Plain Layout

vRef.top_num += 1;  //incrementing the object in the map 
\end_layout

\begin_layout Plain Layout

cout << node_set.at(label).top_num << endl;   // outputs 1 
\end_layout

\begin_layout Plain Layout

Vertex<T> vCopy = node_set.at(label);  //copy assignment 
\end_layout

\begin_layout Plain Layout

vCopy.top_num += 1;             // increments the copy 
\end_layout

\begin_layout Plain Layout

cout << node_set.at(label).top_num << endl; // outputs 1 again 
\end_layout

\begin_layout Plain Layout

node_set.at(label).top_num += 1; //incrementing the object in the map  
\end_layout

\begin_layout Plain Layout

cout << node_set.at(label).top_num << endl;   // outputs 2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

//much of the same applies to iterating the map object 
\end_layout

\begin_layout Plain Layout

//elements by reference, updates within the map 
\end_layout

\begin_layout Plain Layout

for(auto& v: node_set){ 
\end_layout

\begin_layout Plain Layout

  v.second.indegree = 0;
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

//elements by copy, no updates to the item in the map 
\end_layout

\begin_layout Plain Layout

for(auto v: node_set){
\end_layout

\begin_layout Plain Layout

  v.second.indegree = 0;
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

//in both the cases auto is pair<T,Vertex<T>> type object 
\end_layout

\begin_layout Plain Layout

//in case this is a new syntax for you:
\end_layout

\begin_layout Plain Layout

// these for loops are iterating over all objects in the map
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
(
\emph on
Optional
\emph default
) Another data structure you may be using for the first time is 
\family typewriter
std::priority_queue
\family default
, implemented via a binary heap.
 It takes one or three template parameters: 
\family typewriter
<Type, ContainerType, Functor>
\family default
.
 The priority queue orders by maximizing, meaning that the greatest priority
 element is returned first.
 The stored type or the functor should implement the 
\family typewriter
operator<()
\family default
.
 The Container type is unimportant, 
\family typewriter
std::vector<Vertex<T>>
\family default
 can be used.
 The code for declaring a functor class is show below.
 Recall that the implementation of topological ordering likely assigns the
 first ordered elements a lower value.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

// syntax for a custom comparator
\end_layout

\begin_layout Plain Layout

template<class T> 
\end_layout

\begin_layout Plain Layout

class VertexCompare {
\end_layout

\begin_layout Plain Layout

public:
\end_layout

\begin_layout Plain Layout

  bool operator()(Vertex<T> v1, Vertex<T> v2){
\end_layout

\begin_layout Plain Layout

    //TODO - implement
\end_layout

\begin_layout Plain Layout

	return false;
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

};
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

priority_queue<Vertex<T>, vector<Vertex<T>>, VertexCompare<T>> pq;
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
